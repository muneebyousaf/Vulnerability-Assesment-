Flush+Flush & Flush+Reload Attacks on AES Full Key Recovery

This file is written by Usman Ali, Graduate Fellow, ECLab, ITU, Lahore
If there is any issue/query, leave an email at engr.usmanali.pk@gmail.com

Components/Files:
	
	-- openssl-1.0.1f			//Victim
	-- aes_ff.cpp				//Attack using flush + flush
	-- aes_fr.cpp				//Attack using flush + reload
	-- cacheutils				//Header file for both above attacks
	-- cachebench
		-- ff 					//measure flush+flush threshold
		-- fr 					//measure flush+reload threshold


Step 1:	Measure threshold
	open ff or fr directory and use following command:

		make
		./calibrate

		-- 1st column will reprsent threshold, 
		-- 2nd column will represent no of times following threadhold occurs when data is present in cache,
		-- 3nd column will represent no of times following threadhold occurs when data is not present in cache,  

		-- Threshold is that value wich distinguesh cache hit or cache miss.

Step 2: Install Victim

	Install openssl-1.0.1f using following commands in openssl-1.0.1f directory.

		./config -shared no-hw no-asm
		make

Step 3: Extract t-table address
	
	goto openssl-1.0.1f directory and use following command

		nm libcrypto.so.1.0.0 | grep Te


Attck on AES [tutorial is same for both attacks]

Step A: Setup Path to Openssl Library
	
	on line 5: 
					#include "LINK_TO_OPENSSL_DIRECTORY/include/openssl/aes.h"
		example:	#include "/home/usman/Desktop/AES_FR_FULL/openssl-1.0.1f/include/openssl/aes.h"

	on line 114:
					int fd = open("LINK_TO_OPENSSL_DIRECTORY/libcrypto.so", O_RDONLY);
		example:	int fd = open("/home/usman/Desktop/AES_FR_FULL/openssl-1.0.1f/libcrypto.so", O_RDONLY);

Step B: Set threshold value

	on line 36:
					#define MIN_CACHE_MISS_CYCLES (THERSHOLD)
		exmaple:	#define MIN_CACHE_MISS_CYCLES (180)

Step C:	Set t-table address
	
	on line 158:
					base + TE0, base + TE1, base + TE2, base + TE3
		exmaple:	base + 0x1a7e40, base + 0x1a8240, base + 0x1a8640, base + 0x1a8a40

Compile Attack:

	Flush+Flush
					g++ aes_ff.cpp -O0 -o aes_ff -ILINK_TO_OPENSSL_DIRECTORY/ssl -LLINK_TO_OPENSSL_DIRECTORY -lcrypto
		example:	g++ aes_ff.cpp -O0 -o aes_ff -I/home/usman/Desktop/AES_FR_FULL/openssl-1.0.1f/ssl -L/home/usman/Desktop/AES_FR_FULL/openssl-1.0.1f -lcrypto

	Flush+Reload
					g++ aes_fr.cpp -O0 -o aes_fr -ILINK_TO_OPENSSL_DIRECTORY/ssl -LLINK_TO_OPENSSL_DIRECTORY -lcrypto
		example:	g++ aes_fr.cpp -O0 -o aes_fr -I/home/usman/Desktop/AES_FR_FULL/openssl-1.0.1f/ssl -L/home/usman/Desktop/AES_FR_FULL/openssl-1.0.1f -lcrypto


Run Attack:
	
	Step 1: Add Path

		use following command:

						export LD_LIBRARY_PATH="LINK_TO_OPENSSL_DIRECTORY"
			exmaple:	export LD_LIBRARY_PATH="/home/usman/Desktop/AES_FR_FULL/openssl-1.0.1f/"

	Step 2:	Run Attack

			command for flush+flush
				./aes_ff

			command for flush+reload
				./aes_fr

